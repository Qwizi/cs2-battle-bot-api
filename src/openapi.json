{
    "openapi": "3.0.3",
    "info": {
        "title": "cs2-battle-bot-api",
        "version": "0.0.32"
    },
    "paths": {
        "/api/account-connect-link": {
            "get": {
                "operationId": "account_connect_link_retrieve",
                "tags": [
                    "account-connect-link"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountConnectLink"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/discord-users/": {
            "get": {
                "operationId": "discord_users_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "discord-users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDiscordUserList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "discord_users_create",
                "tags": [
                    "discord-users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/discord-users/{id}/": {
            "get": {
                "operationId": "discord_users_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this discord user.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord-users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "discord_users_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this discord user.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord-users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "discord_users_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this discord user.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord-users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDiscordUser"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "discord_users_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this discord user.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord-users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/guilds/": {
            "get": {
                "operationId": "guilds_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "guilds"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGuildList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "guilds_create",
                "tags": [
                    "guilds"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGuild"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guild"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/guilds/{guild_id}/": {
            "get": {
                "operationId": "guilds_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "guild_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "guilds"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guild"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "guilds_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "guild_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "guilds"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGuild"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guild"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "guilds_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "guild_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "guilds"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGuild"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guild"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "guilds_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "guild_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "guilds"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/maps/": {
            "get": {
                "operationId": "maps_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "maps"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMapList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "maps_create",
                "tags": [
                    "maps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Map"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Map"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/maps/{id}/": {
            "get": {
                "operationId": "maps_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this map.",
                        "required": true
                    }
                ],
                "tags": [
                    "maps"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Map"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "maps_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this map.",
                        "required": true
                    }
                ],
                "tags": [
                    "maps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Map"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Map"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "maps_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this map.",
                        "required": true
                    }
                ],
                "tags": [
                    "maps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMap"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Map"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "maps_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this map.",
                        "required": true
                    }
                ],
                "tags": [
                    "maps"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/matches/": {
            "get": {
                "operationId": "matches_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "matches"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMatchList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "matches_create",
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMatch"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/": {
            "get": {
                "operationId": "matches_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "matches_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "matches_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMatch"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "matches_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/matches/{id}/ban/": {
            "post": {
                "operationId": "matches_ban_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchBanMap"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchBanMapResult"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/bans/": {
            "get": {
                "operationId": "matches_bans_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "matches"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMapBanList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/config/": {
            "get": {
                "operationId": "matches_config_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchConfig"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/join/": {
            "post": {
                "operationId": "matches_join_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InteractionUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/load/": {
            "post": {
                "operationId": "matches_load_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Match"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/pick/": {
            "post": {
                "operationId": "matches_pick_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchPickMap"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchPickMapResult"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/picks/": {
            "get": {
                "operationId": "matches_picks_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "matches"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMatchMapSelectedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/recreate/": {
            "post": {
                "operationId": "matches_recreate_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Match"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/shuffle/": {
            "post": {
                "operationId": "matches_shuffle_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InteractionUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/webhook/": {
            "post": {
                "operationId": "matches_webhook_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Match"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/players/": {
            "get": {
                "operationId": "players_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "players"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPlayerList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "players_create",
                "tags": [
                    "players"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Player"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/players/{id}/": {
            "get": {
                "operationId": "players_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this player.",
                        "required": true
                    }
                ],
                "tags": [
                    "players"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "players_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this player.",
                        "required": true
                    }
                ],
                "tags": [
                    "players"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Player"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "players_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this player.",
                        "required": true
                    }
                ],
                "tags": [
                    "players"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPlayer"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "players_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this player.",
                        "required": true
                    }
                ],
                "tags": [
                    "players"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/schema/": {
            "get": {
                "operationId": "schema_retrieve",
                "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "af",
                                "ar",
                                "ar-dz",
                                "ast",
                                "az",
                                "be",
                                "bg",
                                "bn",
                                "br",
                                "bs",
                                "ca",
                                "ckb",
                                "cs",
                                "cy",
                                "da",
                                "de",
                                "dsb",
                                "el",
                                "en",
                                "en-au",
                                "en-gb",
                                "eo",
                                "es",
                                "es-ar",
                                "es-co",
                                "es-mx",
                                "es-ni",
                                "es-ve",
                                "et",
                                "eu",
                                "fa",
                                "fi",
                                "fr",
                                "fy",
                                "ga",
                                "gd",
                                "gl",
                                "he",
                                "hi",
                                "hr",
                                "hsb",
                                "hu",
                                "hy",
                                "ia",
                                "id",
                                "ig",
                                "io",
                                "is",
                                "it",
                                "ja",
                                "ka",
                                "kab",
                                "kk",
                                "km",
                                "kn",
                                "ko",
                                "ky",
                                "lb",
                                "lt",
                                "lv",
                                "mk",
                                "ml",
                                "mn",
                                "mr",
                                "ms",
                                "my",
                                "nb",
                                "ne",
                                "nl",
                                "nn",
                                "os",
                                "pa",
                                "pl",
                                "pt",
                                "pt-br",
                                "ro",
                                "ru",
                                "sk",
                                "sl",
                                "sq",
                                "sr",
                                "sr-latn",
                                "sv",
                                "sw",
                                "ta",
                                "te",
                                "tg",
                                "th",
                                "tk",
                                "tr",
                                "tt",
                                "udm",
                                "ug",
                                "uk",
                                "ur",
                                "uz",
                                "vi",
                                "zh-hans",
                                "zh-hant"
                            ]
                        }
                    }
                ],
                "tags": [
                    "schema"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/servers/": {
            "get": {
                "operationId": "servers_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "guild_or_public",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "servers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedServerList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "servers_create",
                "tags": [
                    "servers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Server"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Server"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/servers/{id}/": {
            "get": {
                "operationId": "servers_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this server.",
                        "required": true
                    }
                ],
                "tags": [
                    "servers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Server"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "servers_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this server.",
                        "required": true
                    }
                ],
                "tags": [
                    "servers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Server"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Server"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "servers_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this server.",
                        "required": true
                    }
                ],
                "tags": [
                    "servers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedServer"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Server"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "servers_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this server.",
                        "required": true
                    }
                ],
                "tags": [
                    "servers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/servers/{id}/join/": {
            "get": {
                "operationId": "servers_join_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this server.",
                        "required": true
                    }
                ],
                "tags": [
                    "servers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Server"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/steam-users/": {
            "get": {
                "operationId": "steam_users_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "steam-users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSteamUserList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "steam_users_create",
                "tags": [
                    "steam-users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SteamUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SteamUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/steam-users/{id}/": {
            "get": {
                "operationId": "steam_users_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this steam user.",
                        "required": true
                    }
                ],
                "tags": [
                    "steam-users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SteamUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "steam_users_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this steam user.",
                        "required": true
                    }
                ],
                "tags": [
                    "steam-users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SteamUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SteamUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "steam_users_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this steam user.",
                        "required": true
                    }
                ],
                "tags": [
                    "steam-users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSteamUser"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SteamUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "steam_users_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this steam user.",
                        "required": true
                    }
                ],
                "tags": [
                    "steam-users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/teams/": {
            "get": {
                "operationId": "teams_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "teams"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTeamList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/teams/{id}/": {
            "get": {
                "operationId": "teams_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this team.",
                        "required": true
                    }
                ],
                "tags": [
                    "teams"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountConnectLink": {
                "type": "object",
                "properties": {
                    "link": {
                        "type": "string"
                    }
                },
                "required": [
                    "link"
                ]
            },
            "CreateGuild": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "owner_username": {
                        "type": "string"
                    }
                },
                "required": [
                    "guild_id",
                    "name",
                    "owner_id",
                    "owner_username"
                ]
            },
            "CreateMatch": {
                "type": "object",
                "properties": {
                    "discord_users_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "author_id": {
                        "type": "string"
                    },
                    "server_id": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "match_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MatchTypeEnum"
                            }
                        ],
                        "default": "BO1"
                    },
                    "clinch_series": {
                        "type": "boolean",
                        "default": false
                    },
                    "map_sides": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MapSidesEnum"
                        },
                        "default": [
                            "knife",
                            "knife",
                            "knife"
                        ]
                    },
                    "cvars": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "maplist": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "author_id",
                    "discord_users_ids",
                    "guild_id"
                ]
            },
            "DiscordUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "updated_at",
                    "user_id",
                    "username"
                ]
            },
            "Guild": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "owner": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "guild_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "lobby_channel": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "team1_channel": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "team2_channel": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "guild_id",
                    "id",
                    "name",
                    "owner",
                    "updated_at"
                ]
            },
            "InteractionUser": {
                "type": "object",
                "properties": {
                    "interaction_user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "interaction_user_id"
                ]
            },
            "Map": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tag": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "name",
                    "tag",
                    "updated_at"
                ]
            },
            "MapBan": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "team": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "map": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Map"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "map",
                    "team",
                    "updated_at"
                ]
            },
            "MapSidesEnum": {
                "enum": [
                    "team1_ct",
                    "team2_ct",
                    "team1_t",
                    "team2_t",
                    "knife"
                ],
                "type": "string",
                "description": "* `team1_ct` - team1_ct\n* `team2_ct` - team2_ct\n* `team1_t` - team1_t\n* `team2_t` - team2_t\n* `knife` - knife"
            },
            "Match": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "team1": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "team2": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "maps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Map"
                        },
                        "readOnly": true
                    },
                    "winner_team": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "map_bans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MapBan"
                        },
                        "readOnly": true
                    },
                    "last_map_ban": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MapBan"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "map_picks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchMapSelected"
                        },
                        "readOnly": true
                    },
                    "last_map_pick": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MatchMapSelected"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DiscordUser"
                            }
                        ],
                        "readOnly": true
                    },
                    "server": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Server"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "guild": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Guild"
                            }
                        ],
                        "readOnly": true
                    },
                    "config_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "config": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MatchConfig"
                            }
                        ],
                        "readOnly": true
                    },
                    "webhook_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "connect_command": {
                        "type": "string",
                        "readOnly": true
                    },
                    "load_match_command": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeEnum"
                    },
                    "num_maps": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "maplist": {
                        "nullable": true
                    },
                    "map_sides": {
                        "nullable": true
                    },
                    "clinch_series": {
                        "type": "boolean"
                    },
                    "cvars": {
                        "nullable": true
                    },
                    "players_per_team": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "message_id": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "author",
                    "config",
                    "config_url",
                    "connect_command",
                    "created_at",
                    "guild",
                    "id",
                    "last_map_ban",
                    "last_map_pick",
                    "load_match_command",
                    "map_bans",
                    "map_picks",
                    "maps",
                    "server",
                    "team1",
                    "team2",
                    "updated_at",
                    "webhook_url",
                    "winner_team"
                ]
            },
            "MatchBanMap": {
                "type": "object",
                "properties": {
                    "interaction_user_id": {
                        "type": "string"
                    },
                    "map_tag": {
                        "type": "string"
                    }
                },
                "required": [
                    "interaction_user_id",
                    "map_tag"
                ]
            },
            "MatchBanMapResult": {
                "type": "object",
                "properties": {
                    "banned_map": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Map"
                            }
                        ],
                        "readOnly": true
                    },
                    "next_ban_team": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "maps_left": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "map_bans_count": {
                        "type": "integer"
                    }
                },
                "required": [
                    "banned_map",
                    "map_bans_count",
                    "maps_left",
                    "next_ban_team"
                ]
            },
            "MatchConfig": {
                "type": "object",
                "properties": {
                    "matchid": {
                        "type": "string"
                    },
                    "team1": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "team2": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "num_maps": {
                        "type": "integer"
                    },
                    "maplist": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "map_sides": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MapSidesEnum"
                        }
                    },
                    "clinch_series": {
                        "type": "boolean"
                    },
                    "players_per_team": {
                        "type": "integer"
                    },
                    "cvars": {
                        "type": "object",
                        "additionalProperties": {}
                    }
                },
                "required": [
                    "clinch_series",
                    "map_sides",
                    "maplist",
                    "matchid",
                    "num_maps",
                    "players_per_team",
                    "team1",
                    "team2"
                ]
            },
            "MatchMapSelected": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "team": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "map": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Map"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "map",
                    "team",
                    "updated_at"
                ]
            },
            "MatchPickMap": {
                "type": "object",
                "properties": {
                    "interaction_user_id": {
                        "type": "string"
                    },
                    "map_tag": {
                        "type": "string"
                    }
                },
                "required": [
                    "interaction_user_id",
                    "map_tag"
                ]
            },
            "MatchPickMapResult": {
                "type": "object",
                "properties": {
                    "picked_map": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Map"
                            }
                        ],
                        "readOnly": true
                    },
                    "next_pick_team": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "maps_left": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "map_picks_count": {
                        "type": "integer"
                    }
                },
                "required": [
                    "map_picks_count",
                    "maps_left",
                    "next_pick_team",
                    "picked_map"
                ]
            },
            "MatchTypeEnum": {
                "enum": [
                    "BO1",
                    "BO3",
                    "BO5"
                ],
                "type": "string",
                "description": "* `BO1` - Bo1\n* `BO3` - Bo3\n* `BO5` - Bo5"
            },
            "MatchUpdate": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeEnum"
                    },
                    "team1_id": {
                        "type": "string"
                    },
                    "team2_id": {
                        "type": "string"
                    },
                    "map_sides": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MapSidesEnum"
                        }
                    },
                    "clinch_series": {
                        "type": "boolean"
                    },
                    "cvars": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "message_id": {
                        "type": "string"
                    },
                    "author_id": {
                        "type": "string"
                    },
                    "server_id": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    }
                }
            },
            "PaginatedDiscordUserList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DiscordUser"
                        }
                    }
                }
            },
            "PaginatedGuildList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Guild"
                        }
                    }
                }
            },
            "PaginatedMapBanList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MapBan"
                        }
                    }
                }
            },
            "PaginatedMapList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Map"
                        }
                    }
                }
            },
            "PaginatedMatchList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Match"
                        }
                    }
                }
            },
            "PaginatedMatchMapSelectedList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchMapSelected"
                        }
                    }
                }
            },
            "PaginatedPlayerList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Player"
                        }
                    }
                }
            },
            "PaginatedServerList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Server"
                        }
                    }
                }
            },
            "PaginatedSteamUserList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SteamUser"
                        }
                    }
                }
            },
            "PaginatedTeamList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Team"
                        }
                    }
                }
            },
            "PatchedDiscordUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedGuild": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "owner": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "guild_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "lobby_channel": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "team1_channel": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "team2_channel": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedMap": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tag": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedMatch": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "team1": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "team2": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "maps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Map"
                        },
                        "readOnly": true
                    },
                    "winner_team": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "map_bans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MapBan"
                        },
                        "readOnly": true
                    },
                    "last_map_ban": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MapBan"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "map_picks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchMapSelected"
                        },
                        "readOnly": true
                    },
                    "last_map_pick": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MatchMapSelected"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DiscordUser"
                            }
                        ],
                        "readOnly": true
                    },
                    "server": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Server"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "guild": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Guild"
                            }
                        ],
                        "readOnly": true
                    },
                    "config_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "config": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MatchConfig"
                            }
                        ],
                        "readOnly": true
                    },
                    "webhook_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "connect_command": {
                        "type": "string",
                        "readOnly": true
                    },
                    "load_match_command": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeEnum"
                    },
                    "num_maps": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "maplist": {
                        "nullable": true
                    },
                    "map_sides": {
                        "nullable": true
                    },
                    "clinch_series": {
                        "type": "boolean"
                    },
                    "cvars": {
                        "nullable": true
                    },
                    "players_per_team": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "message_id": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedPlayer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "discord_user": {
                        "$ref": "#/components/schemas/DiscordUser"
                    },
                    "steam_user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SteamUser"
                            }
                        ],
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedServer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "ip": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "port": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "is_public": {
                        "type": "boolean"
                    },
                    "rcon_password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "guild": {
                        "type": "string",
                        "nullable": true
                    },
                    "join_url": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "PatchedSteamUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "steamid64": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "steamid32": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "profile_url": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "Player": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "discord_user": {
                        "$ref": "#/components/schemas/DiscordUser"
                    },
                    "steam_user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SteamUser"
                            }
                        ],
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "discord_user",
                    "id",
                    "steam_user",
                    "updated_at"
                ]
            },
            "Server": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "ip": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "port": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "is_public": {
                        "type": "boolean"
                    },
                    "rcon_password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "guild": {
                        "type": "string",
                        "nullable": true
                    },
                    "join_url": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "ip",
                    "join_url",
                    "name",
                    "port"
                ]
            },
            "StatusEnum": {
                "enum": [
                    "CREATED",
                    "STARTED",
                    "LIVE",
                    "FINISHED"
                ],
                "type": "string",
                "description": "* `CREATED` - Created\n* `STARTED` - Started\n* `LIVE` - Live\n* `FINISHED` - Finished"
            },
            "SteamUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "steamid64": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "steamid32": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "profile_url": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "updated_at",
                    "username"
                ]
            },
            "Team": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "players": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Player"
                        },
                        "readOnly": true
                    },
                    "leader": {
                        "$ref": "#/components/schemas/Player"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "leader",
                    "name",
                    "players",
                    "updated_at"
                ]
            },
            "TypeEnum": {
                "enum": [
                    "BO1",
                    "BO3",
                    "BO5"
                ],
                "type": "string",
                "description": "* `BO1` - Bo1\n* `BO3` - Bo3\n* `BO5` - Bo5"
            },
            "UpdateGuild": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "lobby_channel": {
                        "type": "string"
                    },
                    "team1_channel": {
                        "type": "string"
                    },
                    "team2_channel": {
                        "type": "string"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "player": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Player"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "player",
                    "username"
                ]
            }
        },
        "securitySchemes": {
            "tokenAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization",
                "description": "Token-based authentication with required prefix \"Token\""
            }
        }
    }
}